user proxy;

worker_processes 4;
worker_cpu_affinity 0001 0010 0100 1000;
worker_rlimit_nofile    20480;
pid /run/nginx.pid;

events {
    worker_connections 20480;
}

http {
    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush off;
    tcp_nodelay on;
    server_tokens off;

    client_body_buffer_size 4K;
    client_header_buffer_size 1k;
    client_max_body_size 4m;
    large_client_header_buffers 2 1k;

    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    gzip on;
    gzip_disable "msie6";
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;


    ##
    # Logging Settings
    ##
    access_log off;
    error_log /var/log/nginx/error.log;
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    ##
    # upstream Settings
    ##
    upstream io_nodes {
        ip_hash;
#TO_BE_REPLACED_BY_INSTALLER_HERE_io_nodes
    }
    upstream tls_nodes {
        ip_hash;
#TO_BE_REPLACED_BY_INSTALLER_HERE_tls_nodes
    }

    server {
        listen 80 ;
        listen [::]:80 ;
        server_name #TO_BE_REPLACED_BY_INSTALLER_HERE_server_name  ;
        return 301 https://$host$request_uri;
    }

    server {
        listen              443 ssl;
        keepalive_timeout   70;
        server_name #TO_BE_REPLACED_BY_INSTALLER_HERE_server_name ;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
        ssl_certificate     /etc/nginx/ssl/cert/knet.crt;
        ssl_certificate_key /etc/nginx/ssl/private/knet.key;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;

        root #TO_BE_REPLACED_BY_INSTALLER_HERE_www ;
        index index.html;
        
        location /wss/ {

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_pass http://io_nodes/;
            proxy_set_header Access-Control-Allow-Origin $http_origin;
            proxy_redirect http://tls_nodes https://#TO_BE_REPLACED_BY_INSTALLER_HERE_server_name;

        }
        location /tls/  {

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_pass http://tls_nodes/;
            proxy_set_header Access-Control-Allow-Origin $http_origin;
            proxy_redirect http://tls_nodes https://#TO_BE_REPLACED_BY_INSTALLER_HERE_server_name;

        }
    }
}
